__m512d tmpMtr[3][3][2];
// __mmask8 PACKMASK[2][4] = {{0x55, 0x33, 0x0F, 0xFF}, {0xAA, 0xCC, 0xF0, 0xFF}};
 __mmask8 PACKMASK[2][4] = {{0xAA, 0xCC, 0xF0, 0xFF}, {0x55, 0x33, 0x0F, 0xFF}};
 for ( int c1=0; c1<3; c1+=1 ) { 
 for ( int c2=0; c2<3; c2+=1 ) { 
tmpMtr[c1][c2][0] = _mm512_mask_load_pd(tmpMtr[c1][c2][0], 0xFF, (*goBase)[c1][c2][0]);

tmpMtr[c1][c2][1] = _mm512_mask_load_pd(tmpMtr[c1][c2][1], 0xFF, (*goBase)[c1][c2][1]);

}
}
 for ( int r=0, rsz=0, rpackoffset = 0; r<3; ++r) { 
 for ( int c=0; c<3; ++c, rpackoffset += rsz) { 
 if ( ((dir)>>1) < 3 ) { 
tmpMtr[r][c][0] = _mm512_mask_expandloadu_pd(tmpMtr[r][c][0], PACKMASK[(dir)&1][(dir)>>1], ((rBuf)+rpackoffset));

tmpMtr[r][c][1] = _mm512_mask_expandloadu_pd(tmpMtr[r][c][1], PACKMASK[(dir)&1][(dir)>>1], (((rBuf)+rpackoffset)+4));

rsz = VECLEN;

} else {
tmpMtr[r][c][0] = _mm512_mask_load_pd(tmpMtr[r][c][0], 0xFF, ((rBuf)+rpackoffset));

tmpMtr[r][c][1] = _mm512_mask_load_pd(tmpMtr[r][c][1], 0xFF, (((rBuf)+rpackoffset)+8));

rsz = 2*VECLEN;

}
}
}
 for ( int c1=0; c1<3; c1+=1 ) { 
 for ( int c2=0; c2<3; c2+=1 ) { 
_mm512_stream_pd((void*)(*goBase)[c1][c2][0],tmpMtr[c1][c2][0]);

_mm512_stream_pd((void*)(*goBase)[c1][c2][1],tmpMtr[c1][c2][1]);

}
}
